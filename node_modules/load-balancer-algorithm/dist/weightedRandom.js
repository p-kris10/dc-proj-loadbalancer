"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WeightRandom = void 0;
const base_1 = require("./base");
const util_1 = require("./util");
// interface AddressListInterface {
//   [key: string]: number;
// }
class WeightRandom extends base_1.Base {
    reset(pool) {
        const nodeList = super.reset(pool);
        let totalWeight = 0;
        let isWeightSame = true;
        nodeList.forEach((host, index) => {
            const weight = this.getWeight(host);
            if (index > 0) {
                const prevWeight = this.getWeight(nodeList[index - 1]);
                if (weight !== prevWeight) {
                    isWeightSame = false;
                }
            }
            totalWeight += weight;
        });
        this.totalWeight = totalWeight;
        this.isWeightSame = isWeightSame;
        return nodeList;
    }
    pick() {
        const { pool, totalWeight, isWeightSame } = this;
        const len = pool.length;
        let address;
        // return this.pool[len].host;
        if (totalWeight > 0 && !isWeightSame) {
            let offset = util_1.randomInteger(totalWeight);
            for (let i = 0; i < len; i++) {
                offset -= this.getWeight(pool[i]);
                if (offset < 0) {
                    address = pool[i];
                    break;
                }
            }
        }
        else {
            const index = util_1.randomInteger(len);
            address = pool[index];
        }
        return {
            host: address,
        };
    }
}
exports.WeightRandom = WeightRandom;
//# sourceMappingURL=weightedRandom.js.map